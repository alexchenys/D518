"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
var shelljs_1 = require("shelljs");
var errors_1 = require("../../errors");
var getCommand_1 = require("./getCommand");
var getPath_1 = require("./getPath");
var result_1 = require("../../interfaces/result");
function addExported(exportedCollections, db, collection) {
    if (exportedCollections[db]) {
        exportedCollections[db].push(collection);
    }
    else {
        exportedCollections[db] = [collection];
    }
}
function execAsync(command) {
    return __awaiter(this, void 0, void 0, function () {
        return __generator(this, function (_a) {
            return [2 /*return*/, new Promise(function (resolve, _reject) {
                    shelljs_1.exec(command, { silent: true }, function (code, stdout, stderr) {
                        resolve({ code: code, stdout: stdout, stderr: stderr });
                    });
                })];
        });
    });
}
function exportCollection(db, collection, options, exportedCollections, logger) {
    return __awaiter(this, void 0, void 0, function () {
        var total, outPath, command, commandResult, success, exportingError;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    outPath = getPath_1.getPath(db, collection, options);
                    command = getCommand_1.getCommand(db, collection, options, outPath);
                    logger.printCommand(command);
                    logger.exportingCollectionStart(db, collection.name);
                    return [4 /*yield*/, execAsync(command)];
                case 1:
                    commandResult = _a.sent();
                    success = (commandResult.code === 0);
                    logger.exportingCollectionStop(db, collection.name, success);
                    logger.printMongoexport(commandResult.stderr, success);
                    if (success) {
                        total = true;
                        addExported(exportedCollections, db, collection);
                    }
                    else {
                        total = false;
                        exportingError = new errors_1.ExportingError(null, db, collection.name, command, commandResult.stderr);
                        if (options.warnIfOneFails) {
                            logger.warn("MongoBack: error in exporting collection " + collection.name + " of db " + db, commandResult.stderr);
                        }
                        if (options.throwIfOneFails) {
                            throw exportingError;
                        }
                    }
                    return [2 /*return*/, total];
            }
        });
    });
}
function exportDatabase(db, collections, options, exportedCollections, logger) {
    return __awaiter(this, void 0, void 0, function () {
        var total, _i, collections_1, collection;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    total = true;
                    logger.exportingDatabase(db);
                    _i = 0, collections_1 = collections;
                    _a.label = 1;
                case 1:
                    if (!(_i < collections_1.length)) return [3 /*break*/, 4];
                    collection = collections_1[_i];
                    return [4 /*yield*/, exportCollection(db, collection, options, exportedCollections, logger)];
                case 2:
                    total = (_a.sent()) ? total : false;
                    _a.label = 3;
                case 3:
                    _i++;
                    return [3 /*break*/, 1];
                case 4: return [2 /*return*/, total];
            }
        });
    });
}
function exportCollections(schema, options, logger) {
    return __awaiter(this, void 0, void 0, function () {
        var exportedCollections, code, _a, _b, _i, db;
        return __generator(this, function (_c) {
            switch (_c.label) {
                case 0:
                    exportedCollections = {};
                    code = result_1.ExportResultCode.TOTAL;
                    _a = [];
                    for (_b in schema)
                        _a.push(_b);
                    _i = 0;
                    _c.label = 1;
                case 1:
                    if (!(_i < _a.length)) return [3 /*break*/, 4];
                    db = _a[_i];
                    return [4 /*yield*/, exportDatabase(db, schema[db], options, exportedCollections, logger)];
                case 2:
                    code = (_c.sent()) ? code : result_1.ExportResultCode.PARTIAL;
                    _c.label = 3;
                case 3:
                    _i++;
                    return [3 /*break*/, 1];
                case 4: return [2 /*return*/, { exportedCollections: exportedCollections, code: code }];
            }
        });
    });
}
exports.exportCollections = exportCollections;
//# sourceMappingURL=index.js.map